name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Verify Node.js installation
        run: node -v

      - name: Install dependencies
        run: |
          cd app
          npm install

      - name: Run application tests
        run: |
          cd app
          npm test

      - name: Debug token presence
        run: echo "Token is set."
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          /opt/sonar-scanner/bin/sonar-scanner \
            -Dsonar.projectKey=eks-ci-cd-demo \
            -Dsonar.sources=./app \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      - name: Trivy Scan
        run: trivy image --scanners vuln ${{ secrets.ECR_REPOSITORY }}:latest || echo "Trivy scan skipped if image not present"
      - name: Show current directory
        run: pwd
      - name: List files
        run: ls -la
      - name: Confirm Dockerfile location
        run: ls -la ${{ github.workspace }}/Dockerfile
      - name: Debug ECR_REPOSITORY
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: echo "ECR_REPOSITORY is:$ECR_REPOSITORY"
      - name: Build Docker image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          CLEAN_REPO=$(echo "$ECR_REPOSITORY" | tr -d '\n' | tr -d '\r')
          docker build -t "$CLEAN_REPO:latest" .



      # - name: Build Docker image
      #   env:
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #   run: docker build -t "$ECR_REPOSITORY:latest" /home/ec2-user/actions-runner/_work/ec2-demo/ec2-demo


      - name: Authenticate with Amazon ECR
        run: |
          aws ecr get-login-password --region ap-southeast-2 |
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build and Push Docker image to ECR
        working-directory: ${{ github.workspace }}
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.ECR_REPOSITORY }}:latest \
            --push .

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ap-southeast-2 --name peculiar-pop-crab


      - name: Deploy to EKS
        run: kubectl apply -f deployment.yaml

      - name: Terraform Provisioning (Optional)
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
