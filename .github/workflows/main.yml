name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Verify Node.js installation
        run: node -v

      - name: Install dependencies
        run: |
          cd app
          npm install

      - name: Run application tests
        run: |
          cd app
          npm test

      - name: Debug token presence
        run: echo "Token is set."
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          /opt/sonar-scanner/bin/sonar-scanner \
            -Dsonar.projectKey=eks-ci-cd-demo \
            -Dsonar.sources=./app \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      - name: Trivy Scan
        run: trivy image --scanners vuln ${{ secrets.ECR_REPOSITORY }}:latest || echo "Trivy scan skipped if image not present"

      - name: Build Docker image
        run: docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .

      - name: Authenticate with Amazon ECR
        run: |
          aws ecr get-login-password --region ap-southeast-2 |
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Configure kubectl for EKS
        run: aws eks update-kubeconfig --region ap-south-1 --name eks-ci-cd-cluster

      - name: Deploy to EKS
        run: kubectl apply -f deployment.yaml

      - name: Terraform Provisioning (Optional)
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
